{"version":3,"sources":["webpack:///static/js/viewer.2d88d85ae0b3091297b4.js","webpack:///./3DViewer/viewer/index.js","webpack:///./3DViewer/viewer/main.js"],"names":["webpackJsonp","0","module","exports","__webpack_require__","257","_interopRequireDefault","obj","__esModule","default","cameraLookAt","THREE","Vector3","os_data","metadata","boundingBox","lookAtX","lookAtZ","lookAtY","cameraRadius","lookAtR","setCameraAngles","camera","controls","theta","phi","tweenTime","aim","startRadius","Math","sqrt","pow","position","x","y","z","endRadius","endX","cos","PI","endY","sin","endZ","endUpX","endUpY","endUpZ","target","progress","start","r","acos","atan2","upX","up","upY","upZ","targetX","targetY","targetZ","zoom","end","TweenLite","to","ease","Power3","easeInOut","onUpdate","tween","set","lookAt","updateProjectionMatrix","onUpdateParams","onComplete","setAllCameraAngles","perspectiveTweenTime","orthographicTweenTime","getBoolFromLocalStorage","perspectiveCamera","perspectiveControls","orthographicCamera","orthographicControls","erf","a1","a2","a3","a4","a5","p","sign","absX","abs","t","exp","fitInWindow","container","document","getElementById","style","settings","rotateColorBar","half","colorBarWidth","height","width","colorBarHeight","top","parseInt","left","window","innerWidth","innerHeight","updateColorBarSelection","value","line","text","percent","letiable","valueMin","valueMax","innerHTML","round","display","updateBalloon","object","span","userData","letiableName","letiableKeyName","letiableDate","letiableTime","letiableValue","restoreLastMaterial","visible","wasVisible","material","lastMaterial","needsUpdate","setSelectedMaterial","selected_material","removeMaterial","update","renderBy","isData","dataFolder","letiable_names","letiables","forEach","os_data_let","push","name","gui","addFolder","add","onChange","filter","length","updateColorBar","Grayscale","Sequential","Diverging","Rainbow","setLocalStorage","numDays","hoursPerInterval","step","listen","dateTimeControl","colorBarContainer","classList","remove","cycleHourValue","cycleHour","hourSlider","setTimeout","cycleSpeed","open","removeFolder","i","date","time","units","floor","intervalsPerDay","daySlider","intervalsPerHour","times","timeIndex","d","Date","setUTCSeconds","getUTCMonth","slice","getUTCDate","getUTCHours","getUTCMinutes","dateTime","updateDisplay","scene_objects","surfaceType","showStory","buildingStoryName","showFloors","showWalls","showRoofCeilings","showWindows","indexOf","showDoors","showShading","showPartitions","material_double_sided","material_back","keyName","object_letiables","materials","surfaceTypeMaterialName","coincident_objects","uuid","NormalMaterial","NormalMaterial_Int","boundaryMaterialName","constructionMaterialName","thermalZoneMaterialName","spaceTypeMaterialName","buildingStoryMaterialName","object_letiable","valueIndex","values","letiableUnits","MeshBasicMaterial","side","DoubleSide","color","getColor","colorScheme","intersected","Undefined","console","log","_stringify2","edge","object_edges","showWireframe","back_object","back_objects","coincident_object","selectObject","edges","setRGB","linewidth","coincident_intersected","back_intersected","removeSelection","headsUp","body","cursor","parseMaterials","json","loader","MaterialLoader","l","data","parse","onDocumentMouseDown","event","mouseDownX","clientX","mouseDownY","clientY","onDocumentMouseClick","mouse","renderer","domElement","orthographic","raycaster","setFromCamera","pickable","intersects","intersectObjects","txt","spaceName","outsideBoundaryCondition","sunExposure","windExposure","constructionName","thermalZoneName","spaceTypeName","init","os_data_in","css","head","appendChild","createElement","setAttribute","colorBar","documentElement","getFloatFromLocalStorage","bar","bottom","cloneNode","WebGLRenderer","alpha","antialias","clearColor","setSize","shadowMapEnabled","shadowMapSoft","scene","Scene","aspect","OrthographicCamera","PerspectiveCamera","OrbitControls","minDistance","maxDistance","enabled","light","AmbientLight","axisSize","xAxisMaterial","LineBasicMaterial","xAxisGeometry","Geometry","vertices","Line","yAxisMaterial","yAxisGeometry","zAxisMaterial","zAxisGeometry","project","Object3D","ObjectLoader","children","temp","handle","coincidentWithOutsideObject","outsideBoundaryConditionObjectHandle","scene_edges","EdgesHelper","clone","geometry","Raycaster","Vector2","MeshPhongMaterial","ambient","specular","emissive","shininess","addEventListener","animate","requestAnimationFrame","render","_stringify","getStringFromLocalStorage","key","defaultValue","localStorage","getItem","e","parseFloat","setItem","_","xView","yView","zView","reset","xSection","ySection","zSection","min","max","palette","Color","newX","b","g","ctx","getContext","colorBarData","createImageData","colorBarRow","pixel","putImageData","initDatGui","has_data","dat","GUI","prototype","this","__folders","close","parentNode","removeChild","undefined","onResize","render_modes","building_story_names","buildingStoryNames","unshift","f1","f2","storageKey","Module","addOnPostRun","floorplanStr","threejsStr","floorplanToThreeJS","threejs","JSON","onstorage","location","reload","605"],"mappings":"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","file":"static/js/viewer.2d88d85ae0b3091297b4.js","sourcesContent":["webpackJsonp([3,0],{\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(605);\n\t\n\t__webpack_require__(257);\n\n/***/ }),\n\n/***/ 257:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _stringify = __webpack_require__(31);\n\t\n\tvar _stringify2 = _interopRequireDefault(_stringify);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar os_data = void 0;\n\t\n\tvar renderer = void 0,\n\t    scene = void 0,\n\t    light = void 0,\n\t    scene_objects = void 0,\n\t    scene_edges = void 0,\n\t    object_edges = void 0,\n\t    coincident_objects = void 0,\n\t    back_objects = void 0;\n\tvar perspectiveCamera = void 0,\n\t    orthographicCamera = void 0,\n\t    perspectiveControls = void 0,\n\t    orthographicControls = void 0;\n\tvar project = void 0,\n\t    materials = void 0,\n\t    letiable = void 0;\n\tvar dateTimeControl = void 0;\n\tvar colorBar = void 0,\n\t    colorBarContainer = void 0,\n\t    colorBarHeight = void 0,\n\t    colorBarWidth = void 0;\n\tvar mouseDownX = void 0,\n\t    mouseDownY = void 0;\n\t\n\tvar raycaster = void 0;\n\tvar mouse = void 0;\n\tvar headsUp = void 0;\n\tvar intersected = void 0,\n\t    selected_material = void 0;\n\t\n\tvar getStringFromLocalStorage = function getStringFromLocalStorage(key, defaultValue) {\n\t  try {\n\t    var value = localStorage.getItem(key);\n\t    if (value == null) {\n\t      return defaultValue;\n\t    }\n\t    return value;\n\t  } catch (e) {\n\t    return defaultValue;\n\t  }\n\t};\n\t\n\tvar getBoolFromLocalStorage = function getBoolFromLocalStorage(key, defaultValue) {\n\t  try {\n\t    var value = localStorage.getItem(key);\n\t    if (value == null) {\n\t      return defaultValue;\n\t    }\n\t    return value === 'true';\n\t  } catch (e) {\n\t    return defaultValue;\n\t  }\n\t};\n\t\n\tvar getFloatFromLocalStorage = function getFloatFromLocalStorage(key, defaultValue) {\n\t  try {\n\t    var value = localStorage.getItem(key);\n\t    if (value == null) {\n\t      return defaultValue;\n\t    }\n\t    return parseFloat(value);\n\t  } catch (e) {\n\t    return defaultValue;\n\t  }\n\t};\n\t\n\tvar setLocalStorage = function setLocalStorage(key, value) {\n\t  try {\n\t    localStorage.setItem(key, value);\n\t  } catch (_) {}\n\t};\n\t\n\tfunction cameraLookAt() {\n\t  return new THREE.Vector3(os_data.metadata.boundingBox.lookAtX, os_data.metadata.boundingBox.lookAtZ, -os_data.metadata.boundingBox.lookAtY);\n\t}\n\t\n\tfunction cameraRadius() {\n\t  return 4 * os_data.metadata.boundingBox.lookAtR;\n\t}\n\t\n\tfunction setCameraAngles(camera, controls, theta, phi, tweenTime) {\n\t  var aim = cameraLookAt();\n\t\n\t  var startRadius = Math.sqrt(Math.pow(camera.position.x - aim.x, 2) + Math.pow(camera.position.y - aim.y, 2) + Math.pow(camera.position.z - aim.z, 2));\n\t  var endRadius = cameraRadius();\n\t  var endX = endRadius * Math.cos(theta * Math.PI / 180.0) * Math.cos(phi * Math.PI / 180.0) + aim.x;\n\t  var endY = endRadius * Math.sin(phi * Math.PI / 180.0) + aim.y;\n\t  var endZ = -endRadius * Math.sin(theta * Math.PI / 180.0) * Math.cos(phi * Math.PI / 180.0) + aim.z;\n\t\n\t  var endUpX = 0;\n\t  var endUpY = 1;\n\t  var endUpZ = 0;\n\t  if (phi === 90) {\n\t    endUpX = 0;\n\t    endUpY = 1;\n\t    endUpZ = -0.01;\n\t  }\n\t\n\t  var target = {\n\t    progress: 0,\n\t    start: {\n\t      x: camera.position.x,\n\t      y: camera.position.y,\n\t      z: camera.position.z,\n\t      r: startRadius,\n\t      theta: Math.acos(camera.position.z / startRadius),\n\t      phi: Math.atan2(camera.position.y, camera.position.x),\n\t      upX: camera.up.x,\n\t      upY: camera.up.y,\n\t      upZ: camera.up.z,\n\t      lookAtX: controls.target.x,\n\t      lookAtY: controls.target.y,\n\t      lookAtZ: controls.target.z,\n\t      targetX: controls.target.x,\n\t      targetY: controls.target.y,\n\t      targetZ: controls.target.z,\n\t      zoom: camera.zoom\n\t    },\n\t    end: {\n\t      x: endX,\n\t      y: endY,\n\t      z: endZ,\n\t      r: endRadius,\n\t      theta: Math.acos(endZ / endRadius),\n\t      phi: Math.atan2(endY, endX),\n\t      upX: endUpX,\n\t      upY: endUpY,\n\t      upZ: endUpZ,\n\t      lookAtX: aim.x,\n\t      lookAtY: aim.y,\n\t      lookAtZ: aim.z,\n\t      targetX: aim.x,\n\t      targetY: aim.y,\n\t      targetZ: aim.z,\n\t      zoom: 1\n\t    }\n\t  };\n\t\n\t  TweenLite.to(target, tweenTime, {\n\t    progress: 1,\n\t    ease: Power3.easeInOut,\n\t    onUpdate: function onUpdate(tween) {\n\t      var r = tween.target.start.r + tween.target.progress * (tween.target.end.r - tween.target.start.r);\n\t      var theta = tween.target.start.theta + tween.target.progress * (tween.target.end.theta - tween.target.start.theta);\n\t      var phi = tween.target.start.phi + tween.target.progress * (tween.target.end.phi - tween.target.start.phi);\n\t      var zoom = tween.target.start.zoom + tween.target.progress * (tween.target.end.zoom - tween.target.start.zoom);\n\t      var x = r * Math.sin(theta) * Math.cos(phi);\n\t      var y = r * Math.sin(theta) * Math.sin(phi);\n\t      var z = r * Math.cos(theta);\n\t      var upX = tween.target.start.upX + tween.target.progress * (tween.target.end.upX - tween.target.start.upX);\n\t      var upY = tween.target.start.upY + tween.target.progress * (tween.target.end.upY - tween.target.start.upY);\n\t      var upZ = tween.target.start.upZ + tween.target.progress * (tween.target.end.upZ - tween.target.start.upZ);\n\t      var lookAtX = tween.target.start.lookAtX + tween.target.progress * (tween.target.end.lookAtX - tween.target.start.lookAtX);\n\t      var lookAtY = tween.target.start.lookAtY + tween.target.progress * (tween.target.end.lookAtY - tween.target.start.lookAtY);\n\t      var lookAtZ = tween.target.start.lookAtZ + tween.target.progress * (tween.target.end.lookAtZ - tween.target.start.lookAtZ);\n\t      var targetX = tween.target.start.targetX + tween.target.progress * (tween.target.end.targetX - tween.target.start.targetX);\n\t      var targetY = tween.target.start.targetY + tween.target.progress * (tween.target.end.targetY - tween.target.start.targetY);\n\t      var targetZ = tween.target.start.targetZ + tween.target.progress * (tween.target.end.targetZ - tween.target.start.targetZ);\n\t\n\t      camera.position.set(x, y, z);\n\t      camera.zoom = zoom;\n\t      camera.up.set(upX, upY, upZ);\n\t      camera.lookAt(new THREE.Vector3(lookAtX, lookAtY, lookAtZ));\n\t      camera.updateProjectionMatrix();\n\t\n\t      controls.target = new THREE.Vector3(targetX, targetY, targetZ);\n\t    },\n\t\n\t    onUpdateParams: ['{self}'],\n\t    onComplete: function onComplete() {\n\t      camera.position.set(endX, endY, endZ);\n\t      camera.zoom = 1;\n\t      camera.up.set(endUpX, endUpY, endUpZ);\n\t      camera.lookAt(aim);\n\t      camera.updateProjectionMatrix();\n\t\n\t      controls.target = aim;\n\t    }\n\t  });\n\t}\n\t\n\tfunction setAllCameraAngles(theta, phi, tweenTime) {\n\t  var perspectiveTweenTime = tweenTime;\n\t  var orthographicTweenTime = tweenTime;\n\t  if (getBoolFromLocalStorage('useOthrographic', false)) {\n\t    perspectiveTweenTime = 0;\n\t  } else {\n\t    orthographicTweenTime = 0;\n\t  }\n\t  setCameraAngles(perspectiveCamera, perspectiveControls, theta, phi, perspectiveTweenTime);\n\t  setCameraAngles(orthographicCamera, orthographicControls, theta, phi, orthographicTweenTime);\n\t}\n\t\n\tvar settings = {\n\t  renderBy: 'Surface Type',\n\t  showStory: 'All Stories',\n\t  showFloors: getBoolFromLocalStorage('showFloors', true),\n\t  showWalls: getBoolFromLocalStorage('showWalls', true),\n\t  showRoofCeilings: getBoolFromLocalStorage('showRoofCeilings', true),\n\t  showWindows: getBoolFromLocalStorage('showWindows', true),\n\t  showDoors: getBoolFromLocalStorage('showDoors', true),\n\t  showShading: getBoolFromLocalStorage('showShading', true),\n\t  showPartitions: getBoolFromLocalStorage('showPartitions', true),\n\t  showWireframe: getBoolFromLocalStorage('showWireframe', true),\n\t  xView: function xView() {\n\t    setAllCameraAngles(0, 0, 1);\n\t  },\n\t  yView: function yView() {\n\t    setAllCameraAngles(-90, 0, 1);\n\t  },\n\t  zView: function zView() {\n\t    setAllCameraAngles(0, 90, 1);\n\t  },\n\t  reset: function reset() {\n\t    setAllCameraAngles(-30, 30, 1);\n\t  },\n\t\n\t  orthographic: getBoolFromLocalStorage('useOthrographic', false),\n\t  xSection: 0,\n\t  ySection: 0,\n\t  zSection: 0,\n\t  letiableName: '',\n\t  colorScheme: getStringFromLocalStorage('colorScheme', 'diverging'),\n\t  daySlider: 0,\n\t  hourSlider: 1,\n\t  cycleHour: false,\n\t  cycleSpeed: getFloatFromLocalStorage('cycleSpeed', 1.0),\n\t  rotateColorBar: getBoolFromLocalStorage('rotateColorBar', false),\n\t  dateTime: ''\n\t};\n\t\n\tfunction erf(x) {\n\t  var a1 = 0.254829592;\n\t  var a2 = -0.284496736;\n\t  var a3 = 1.421413741;\n\t  var a4 = -1.453152027;\n\t  var a5 = 1.061405429;\n\t  var p = 0.3275911;\n\t\n\t  var sign = 1;\n\t  if (x < 0) {\n\t    sign = -1;\n\t  }\n\t  var absX = Math.abs(x);\n\t\n\t  var t = 1.0 / (1.0 + p * absX);\n\t  var y = 1.0 - ((((a5 * t + a4) * t + a3) * t + a2) * t + a1) * t * Math.exp(-absX * absX);\n\t\n\t  return sign * y;\n\t}\n\t\n\tvar getColor = function getColor(x, min, max, palette) {\n\t  if (x == null) {\n\t    return new THREE.Color(255, 255, 255);\n\t  }\n\t\n\t  var newX = Math.min(Math.max(x, min), max);\n\t  var percent = (newX - min) / (max - min);\n\t  var r = 1 - percent;\n\t  var b = 1 - percent;\n\t  var g = 1 - percent;\n\t\n\t  switch (palette) {\n\t    case 'sequential':\n\t      r = 1 - 0.392 * (1 + erf((percent - 0.869) / 0.255));\n\t      g = 1.021 - 0.456 * (1 + erf((percent - 0.527) / 0.376));\n\t      b = 1 - 0.493 * (1 + erf((percent - 0.272) / 0.309));\n\t      break;\n\t    case 'diverging':\n\t      r = 0.237 - 2.13 * percent + 26.92 * Math.pow(percent, 2) - 65.5 * Math.pow(percent, 3) + 63.5 * Math.pow(percent, 4) - 22.36 * Math.pow(percent, 5);\n\t      g = Math.pow((0.572 + 1.524 * percent - 1.811 * Math.pow(percent, 2)) / (1 - 0.291 * percent + 0.1574 * Math.pow(percent, 2)), 2);\n\t      b = 1 / (1.579 - 4.03 * percent + 12.92 * Math.pow(percent, 2) - 31.4 * Math.pow(percent, 3) + 48.6 * Math.pow(percent, 4) - 23.36 * Math.pow(percent, 5));\n\t      break;\n\t    case 'rainbow':\n\t      r = (0.472 - 0.567 * percent + 4.05 * Math.pow(percent, 2)) / (1 + 8.72 * percent - 19.17 * Math.pow(percent, 2) + 14.1 * Math.pow(percent, 3));\n\t      g = 0.108932 - 1.22635 * percent + 27.284 * Math.pow(percent, 2) - 98.577 * Math.pow(percent, 3) + 163.3 * Math.pow(percent, 4) - 131.395 * Math.pow(percent, 5) + 40.634 * Math.pow(percent, 6);\n\t      b = 1 / (1.97 + 3.54 * percent - 68.5 * Math.pow(percent, 2) + 243 * Math.pow(percent, 3) - 297 * Math.pow(percent, 4) + 125 * Math.pow(percent, 5));\n\t      break;\n\t  }\n\t  return new THREE.Color(r, g, b);\n\t};\n\tfunction fitInWindow() {\n\t  var container = document.getElementById('color-bar-container');\n\t  var style = container.style;\n\t  if (!settings.rotateColorBar) {\n\t    var height = colorBarHeight + 112;\n\t    var width = colorBarWidth + 42;\n\t    var top = parseInt(style.top, 10);\n\t    var left = parseInt(style.left, 10);\n\t    if (left < 0) {\n\t      style.left = 0;\n\t    } else if (window.innerWidth < left + width) {\n\t      style.left = window.innerWidth - width + 'px';\n\t    }\n\t    if (top < 0) {\n\t      style.top = 0;\n\t    } else if (window.innerHeight < top + height) {\n\t      style.top = window.innerHeight - height + 'px';\n\t    }\n\t  } else {\n\t    var half = (colorBarWidth + 42) / 2;\n\t    var _height = colorBarWidth + 42;\n\t    var _width = colorBarHeight + 112;\n\t    var _top = parseInt(style.top, 10) - half;\n\t    var _left = parseInt(style.left, 10) + half;\n\t    if (_left < 0) {\n\t      style.left = -half + 'px';\n\t    } else if (window.innerWidth < _left + _width) {\n\t      style.left = window.innerWidth - _width - half + 'px';\n\t    }\n\t    if (_top < 0) {\n\t      style.top = half + 'px';\n\t    } else if (window.innerHeight < _top + _height) {\n\t      style.top = window.innerHeight - _height + half + 'px';\n\t    }\n\t  }\n\t}\n\tfunction updateColorBarSelection(value) {\n\t  var line = document.getElementById('color-bar-selection-line');\n\t  var text = document.getElementById('color-bar-selection-text');\n\t  if (value !== '') {\n\t    var percent = (value - letiable.valueMin) / (letiable.valueMax - letiable.valueMin);\n\t    line.style.left = 20 + colorBarWidth * percent + 'px';\n\t    text.style.left = 10 + colorBarWidth * percent + 'px';\n\t    text.innerHTML = Math.round(value * 100) / 100;\n\t  } else {\n\t    line.style.display = 'none';\n\t    text.style.display = 'none';\n\t  }\n\t}\n\tfunction updateBalloon(object) {\n\t  var span = document.getElementById('balloon-letiable-name');\n\t  if (span) span.innerHTML = object.userData.letiableName;\n\t\n\t  span = document.getElementById('balloon-letiable-key-name');\n\t  if (span) span.innerHTML = object.userData.letiableKeyName;\n\t\n\t  span = document.getElementById('balloon-letiable-date');\n\t  if (span) span.innerHTML = object.userData.letiableDate;\n\t\n\t  span = document.getElementById('balloon-letiable-time');\n\t  if (span) span.innerHTML = object.userData.letiableTime;\n\t\n\t  span = document.getElementById('balloon-letiable-value');\n\t  if (span) span.innerHTML = object.userData.letiableValue;\n\t}\n\t\n\tfunction restoreLastMaterial(object) {\n\t\n\t  object.visible = object.wasVisible;\n\t  object.material = object.lastMaterial;\n\t  if (object.material) {\n\t    object.material.needsUpdate = true;\n\t  }\n\t  object.lastMaterial = null;\n\t}\n\t\n\tfunction setSelectedMaterial(object) {\n\t\n\t  object.wasVisible = object.visible;\n\t  object.lastMaterial = object.material;\n\t  object.visible = true;\n\t  object.material = selected_material;\n\t  object.material.needsUpdate = true;\n\t}\n\t\n\tfunction removeMaterial(object) {\n\t\n\t  object.wasVisible = object.visible;\n\t  object.lastMaterial = object.material;\n\t  object.visible = false;\n\t  object.material = null;\n\t}\n\t\n\tvar updateColorBar = function updateColorBar() {\n\t  var ctx = colorBar.getContext('2d');\n\t  var colorBarData = ctx.createImageData(colorBarWidth, colorBarHeight);\n\t  var colorBarRow = [];\n\t  for (var i = 0; i < colorBarWidth; i++) {\n\t    var pixel = getColor(i, 0, colorBarWidth - 1, settings.colorScheme);\n\t    colorBarRow[i * 4] = pixel.r * 255;\n\t    colorBarRow[i * 4 + 1] = pixel.g * 255;\n\t    colorBarRow[i * 4 + 2] = pixel.b * 255;\n\t    colorBarRow[i * 4 + 3] = 255;\n\t  }\n\t  for (var _i = 0; _i < colorBarData.data.length; _i++) {\n\t    colorBarData.data[_i] = colorBarRow[_i % (colorBarWidth * 4)];\n\t  }\n\t  ctx.putImageData(colorBarData, 0, 0);\n\t\n\t  document.getElementById('color-bar-min').innerHTML = Math.round(letiable.valueMin * 100) / 100;\n\t  document.getElementById('color-bar-max').innerHTML = Math.round(letiable.valueMax * 100) / 100;\n\t};\n\t\n\tvar gui = null;\n\tvar dataFolder = null;\n\tfunction update() {\n\t  var renderBy = settings.renderBy;\n\t  var isData = renderBy === 'Data';\n\t  if (isData && !dataFolder) {\n\t    var letiable_names = [];\n\t    os_data.letiables.forEach(function (os_data_let) {\n\t      letiable_names.push(os_data_let.name);\n\t    });\n\t    letiable = os_data.letiables[0];\n\t    settings.letiableName = letiable.name;\n\t\n\t    dataFolder = gui.addFolder('Data Rendering');\n\t    dataFolder.add(settings, 'letiableName', letiable_names).name('letiable').onChange(function (letiableName) {\n\t      var letiables = os_data.letiables.filter(function (x) {\n\t        return x.name === letiableName;\n\t      });\n\t      if (letiables.length) {\n\t        letiable = letiables[0];\n\t      }\n\t      updateColorBar();\n\t      update();\n\t    });\n\t    dataFolder.add(settings, 'colorScheme', { Grayscale: 'grayscale', Sequential: 'sequential', Diverging: 'diverging', Rainbow: 'rainbow' }).name('Color Scheme').onChange(function (value) {\n\t      setLocalStorage('colorScheme', value);\n\t      updateColorBar();\n\t      update(value);\n\t    });\n\t    dataFolder.add(settings, 'daySlider', 0, letiable.numDays - 1, 1).name('Day').onChange(update);\n\t    dataFolder.add(settings, 'hourSlider', letiable.hoursPerInterval, 24).step(letiable.hoursPerInterval).name('Hour').listen().onChange(update);\n\t    dateTimeControl = dataFolder.add(settings, 'dateTime').name('Date Time').listen();\n\t    dataFolder.add(settings, 'rotateColorBar').name('Rotate Color Bar').onChange(function (value) {\n\t      if (value) {\n\t        colorBarContainer.classList.add('rotate');\n\t      } else {\n\t        colorBarContainer.classList.remove('rotate');\n\t      }\n\t      fitInWindow();\n\t      setLocalStorage('rotateColorBar', value);\n\t    });\n\t    dataFolder.add(settings, 'cycleHour').name('Cycle Hour').onChange(function (cycleHourValue) {\n\t      if (cycleHourValue) {\n\t        var cycleHour = function cycleHour() {\n\t          if (settings.cycleHour) {\n\t            settings.hourSlider = settings.hourSlider % 24 + 1;\n\t            update();\n\t            setTimeout(cycleHour, 1000 / settings.cycleSpeed);\n\t          }\n\t        };\n\t\n\t        cycleHour();\n\t      }\n\t    });\n\t    dataFolder.add(settings, 'cycleSpeed', 1, 10).name('Cycle Speed').onChange(function (value) {\n\t      setLocalStorage('cycleSpeed', value);\n\t    });\n\t    dataFolder.open();\n\t    document.getElementById('color-bar-container').style.display = 'block';\n\t    fitInWindow();\n\t    updateColorBar();\n\t  } else if (!isData && dataFolder) {\n\t    gui.removeFolder('Data Rendering');\n\t    dataFolder = null;\n\t    if (settings.cycleHour) {\n\t      settings.cycleHour = false;\n\t    }\n\t    document.getElementById('color-bar-container').style.display = 'none';\n\t  }\n\t\n\t  var i = null;\n\t  var date = '';\n\t  var time = '';\n\t  var units = '';\n\t  if (isData && letiable) {\n\t    i = Math.floor(letiable.intervalsPerDay * Math.floor(settings.daySlider) + letiable.intervalsPerHour * Math.floor(settings.hourSlider)) - 1;\n\t    var t = os_data.times[letiable.timeIndex][i];\n\t    var d = new Date(0);\n\t    d.setUTCSeconds(t);\n\t\n\t    date = ('0' + (d.getUTCMonth() + 1)).slice(-2) + '/' + ('0' + d.getUTCDate()).slice(-2);\n\t    time = ('0' + d.getUTCHours()).slice(-2) + ':' + ('0' + d.getUTCMinutes()).slice(-2);\n\t\n\t    settings.dateTime = date + ' - ' + time;\n\t    dateTimeControl.updateDisplay();\n\t\n\t    if (letiable.units.length) {\n\t      units = '(' + letiable.units + ')';\n\t    }\n\t  }\n\t\n\t  scene_objects.forEach(function (object) {\n\t    var surfaceType = object.userData.surfaceType;\n\t\n\t    object.visible = true;\n\t\n\t    if (settings.showStory === 'All Stories' || settings.showStory === object.userData.buildingStoryName) {} else {\n\t      object.visible = false;\n\t    }\n\t\n\t    if (!settings.showFloors && surfaceType === 'Floor') {\n\t      object.visible = false;\n\t    } else if (!settings.showWalls && surfaceType === 'Wall') {\n\t      object.visible = false;\n\t    } else if (!settings.showRoofCeilings && surfaceType === 'RoofCeiling') {\n\t      object.visible = false;\n\t    } else if (!settings.showWindows && surfaceType.indexOf('Window') > -1) {\n\t      object.visible = false;\n\t    } else if (!settings.showWindows && surfaceType.indexOf('GlassDoor') > -1) {} else if (!settings.showWindows && surfaceType.indexOf('Skylight') > -1) {\n\t      object.visible = false;\n\t    } else if (!settings.showWindows && surfaceType.indexOf('TubularDaylight') > -1) {\n\t      object.visible = false;\n\t    } else if (!settings.showDoors && surfaceType.indexOf('Door') > -1) {\n\t      object.visible = false;\n\t    } else if (!settings.showShading && surfaceType.indexOf('Shading') > -1) {\n\t      object.visible = false;\n\t    } else if (!settings.showPartitions && surfaceType === 'InteriorPartitionSurface') {\n\t      object.visible = false;\n\t    }\n\t\n\t    var material = null;\n\t    var material_double_sided = null;\n\t    var material_back = null;\n\t    var value = void 0,\n\t        keyName = void 0,\n\t        object_letiables = void 0;\n\t    switch (renderBy) {\n\t      case 'Surface Type':\n\t        material = materials[object.userData.surfaceTypeMaterialName];\n\t        material_double_sided = material;\n\t        if (coincident_objects[object.uuid]) {\n\t          material = materials[object.userData.surfaceTypeMaterialName + '_Int'];\n\t        }\n\t        material_back = materials[object.userData.surfaceTypeMaterialName + '_Int'];\n\t        break;\n\t      case 'Normal':\n\t        material = materials.NormalMaterial;\n\t        material_double_sided = material;\n\t        if (coincident_objects[object.uuid]) {\n\t          material = materials.NormalMaterial_Int;\n\t        }\n\t        material_back = materials.NormalMaterial_Int;\n\t        break;\n\t      case 'Boundary':\n\t        material = materials[object.userData.boundaryMaterialName];\n\t        break;\n\t      case 'Construction':\n\t        material = materials[object.userData.constructionMaterialName];\n\t        break;\n\t      case 'Thermal Zone':\n\t        material = materials[object.userData.thermalZoneMaterialName];\n\t        break;\n\t      case 'Space Type':\n\t        material = materials[object.userData.spaceTypeMaterialName];\n\t        break;\n\t      case 'Building Story':\n\t        material = materials[object.userData.buildingStoryMaterialName];\n\t        break;\n\t      case 'Data':\n\t        value = null;\n\t        keyName = '';\n\t        object_letiables = object.userData.letiables.filter(function (x) {\n\t          return x.name === settings.letiableName;\n\t        });\n\t        if (object_letiables.length > 0) {\n\t          var object_letiable = object_letiables[0];\n\t          if (object_letiable.valueIndex !== null) {\n\t            value = letiable.values[object_letiable.valueIndex][i];\n\t          }\n\t          if (object_letiable.keyName !== null) {\n\t            keyName = object_letiable.keyName;\n\t          }\n\t        }\n\t\n\t        if (value !== null) {\n\t          object.userData.letiableName = settings.letiableName;\n\t          object.userData.letiableDate = date;\n\t          object.userData.letiableTime = time;\n\t          object.userData.letiableKeyName = keyName;\n\t          object.userData.letiableValue = value;\n\t          object.userData.letiableUnits = units;\n\t        } else {\n\t          object.userData.letiableName = settings.letiableName;\n\t          object.userData.letiableDate = date;\n\t          object.userData.letiableTime = time;\n\t          object.userData.letiableKeyName = keyName;\n\t          object.userData.letiableValue = '';\n\t          object.userData.letiableUnits = units;\n\t        }\n\t\n\t        material = new THREE.MeshBasicMaterial({ side: THREE.DoubleSide });\n\t        material.color.set(getColor(value, letiable.valueMin, letiable.valueMax, settings.colorScheme));\n\t        break;\n\t    }\n\t\n\t    if (intersected) {\n\t      updateBalloon(intersected);\n\t      updateColorBarSelection(intersected.userData.letiableValue);\n\t    }\n\t\n\t    if (!material) {\n\t      material = materials.Undefined;\n\t      console.log(renderBy + ': could not find material for ' + (0, _stringify2.default)(object.userData));\n\t    }\n\t    if (!material_double_sided) {\n\t      material_double_sided = material;\n\t    }\n\t    if (!material_back) {\n\t      material_back = material;\n\t    }\n\t\n\t    object.material = material;\n\t    object.material_double_sided = material_double_sided;\n\t    if (material !== null) {\n\t      object.material.needsUpdate = true;\n\t    }\n\t\n\t    var edge = object_edges[object.uuid];\n\t    if (settings.showWireframe || object.visible) {\n\t      edge.visible = true;\n\t    } else {\n\t      edge.visible = false;\n\t    }\n\t\n\t    var back_object = back_objects[object.uuid];\n\t    if (back_object) {\n\t      back_object.material = material_back;\n\t      if (material_back !== null) {\n\t        back_object.visible = object.visible;\n\t        back_object.material.needsUpdate = true;\n\t      } else {\n\t        back_object.visible = false;\n\t      }\n\t    }\n\t  });\n\t\n\t  scene_objects.forEach(function (object) {\n\t    if (object.visible) {\n\t      var coincident_object = coincident_objects[object.uuid];\n\t      if (coincident_object) {\n\t        var back_object = back_objects[object.uuid];\n\t        if (back_object) {\n\t          if (coincident_object.visible) {\n\t            back_object.visible = false;\n\t          } else {\n\t            back_object.visible = true;\n\t\n\t            if (object.material_double_sided) {\n\t              object.material = object.material_double_sided;\n\t              object.material.needsUpdate = true;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  });\n\t}\n\t\n\tfunction selectObject(object) {\n\t  var renderBy = settings.renderBy;\n\t  var isData = renderBy === 'Data';\n\t\n\t  if (intersected !== object) {\n\t    if (intersected) {\n\t      var edges = object_edges[intersected.uuid];\n\t      if (edges) {\n\t        edges.material.color.setRGB(0, 0, 0);\n\t        edges.material.linewidth = 1;\n\t        edges.material.needsUpdate = true;\n\t      }\n\t    }\n\t    if (!isData && intersected) {\n\t      restoreLastMaterial(intersected);\n\t\n\t      var coincident_intersected = coincident_objects[intersected.uuid];\n\t      if (coincident_intersected) {\n\t        restoreLastMaterial(coincident_intersected);\n\t      }\n\t\n\t      var back_intersected = back_objects[intersected.uuid];\n\t      if (back_intersected) {\n\t        restoreLastMaterial(back_intersected);\n\t      }\n\t    }\n\t\n\t    intersected = object;\n\t\n\t    if (intersected) {\n\t      var _edges = object_edges[intersected.uuid];\n\t      if (_edges) {\n\t        _edges.material.color.setRGB(0, 255, 0);\n\t        _edges.material.linewidth = 4;\n\t        _edges.material.needsUpdate = true;\n\t      }\n\t    }\n\t    if (!isData && intersected) {\n\t      setSelectedMaterial(intersected);\n\t\n\t      var _coincident_intersected = coincident_objects[intersected.uuid];\n\t      if (_coincident_intersected) {\n\t        removeMaterial(_coincident_intersected);\n\t      }\n\t\n\t      var _back_intersected = back_objects[intersected.uuid];\n\t      if (_back_intersected) {\n\t        removeMaterial(_back_intersected);\n\t      }\n\t    }\n\t    if (isData && intersected) {\n\t      update();\n\t    }\n\t  }\n\t}\n\t\n\tfunction removeSelection() {\n\t  selectObject(null);\n\t  headsUp.style.display = 'none';\n\t  document.body.style.cursor = 'auto';\n\t  document.getElementById('color-bar-selection-line').style.display = 'none';\n\t  document.getElementById('color-bar-selection-text').style.display = 'none';\n\t}\n\t\n\tfunction parseMaterials(json) {\n\t  var materials = {};\n\t  var loader = new THREE.MaterialLoader();\n\t  for (var i = 0, l = json.length; i < l; i++) {\n\t    var data = json[i];\n\t    var material = loader.parse(data);\n\t    material.uuid = data.uuid;\n\t    material.name = data.name;\n\t    materials[data.name] = material;\n\t  }\n\t  return materials;\n\t}\n\t\n\tfunction onDocumentMouseDown(event) {\n\t  mouseDownX = event.clientX;\n\t  mouseDownY = event.clientY;\n\t}\n\tfunction onDocumentMouseClick(event) {\n\t  if (mouseDownX === event.clientX && mouseDownY === event.clientY) {\n\t    mouse.x = event.clientX / renderer.domElement.width * 2 - 1;\n\t    mouse.y = -(event.clientY / renderer.domElement.height) * 2 + 1;\n\t\n\t    if (settings.orthographic) {\n\t      raycaster.setFromCamera(mouse, orthographicCamera);\n\t    } else {\n\t      raycaster.setFromCamera(mouse, perspectiveCamera);\n\t    }\n\t\n\t    var pickable = scene_objects.filter(function (x) {\n\t      return x.visible;\n\t    });\n\t    var intersects = raycaster.intersectObjects(pickable);\n\t    if (intersects.length) {\n\t      selectObject(intersects[0].object);\n\t\n\t      headsUp.style.left = 10 + 0.5 * window.innerWidth + mouse.x * 0.5 * window.innerWidth + 'px';\n\t      headsUp.style.top = -10 + 0.5 * window.innerHeight - mouse.y * 0.5 * window.innerHeight + 'px';\n\t      headsUp.style.display = 'block';\n\t      document.getElementById('color-bar-selection-line').style.display = 'block';\n\t      document.getElementById('color-bar-selection-text').style.display = 'inline-block';\n\t\n\t      var txt = 'Name: ' + intersected.userData.name + '<br>';\n\t      switch (settings.renderBy) {\n\t        case 'Surface Type':\n\t          txt += 'Surface Type: ' + intersected.userData.surfaceType + '<br>';\n\t          if (intersected.userData.spaceName) {\n\t            txt += 'Space Name: ' + intersected.userData.spaceName;\n\t          }\n\t          break;\n\t        case 'Normal':\n\t          txt += 'Surface Type: ' + intersected.userData.surfaceType + '<br>';\n\t          if (intersected.userData.spaceName) {\n\t            txt += 'Space Name: ' + intersected.userData.spaceName;\n\t          }\n\t          break;\n\t        case 'Boundary':\n\t          if (intersected.userData.outsideBoundaryCondition) {\n\t            txt += 'Outside Boundary Condition: ' + intersected.userData.outsideBoundaryCondition + '<br>';\n\t          }\n\t          txt += 'Sun Exposure: ' + intersected.userData.sunExposure + '<br>';\n\t          txt += 'Wind Exposure: ' + intersected.userData.windExposure;\n\t          break;\n\t        case 'Construction':\n\t          if (intersected.userData.constructionName) {\n\t            txt += 'Construction Name: ' + intersected.userData.constructionName;\n\t          }\n\t          break;\n\t        case 'Thermal Zone':\n\t          if (intersected.userData.thermalZoneName) {\n\t            txt += 'Thermal Zone: ' + intersected.userData.thermalZoneName;\n\t          }\n\t          break;\n\t        case 'Space Type':\n\t          if (intersected.userData.spaceTypeName) {\n\t            txt += 'Space Type: ' + intersected.userData.spaceTypeName;\n\t          }\n\t          break;\n\t        case 'Building Story':\n\t          if (intersected.userData.buildingStoryName) {\n\t            txt += 'Story Name: ' + intersected.userData.buildingStoryName;\n\t          }\n\t          break;\n\t        case 'Data':\n\t          if (intersected.userData.letiableValue !== '') {\n\t            txt += 'letiable: <span id=\"balloon-letiable-name\">' + intersected.userData.letiableName + '</span><br>';\n\t            txt += 'Key: <span id=\"balloon-letiable-key-name\">' + intersected.userData.letiableKeyName + '</span><br>';\n\t            txt += 'Date: <span id=\"balloon-letiable-date\">' + intersected.userData.letiableDate + '</span><br>';\n\t            txt += 'Time: <span id=\"balloon-letiable-time\">' + intersected.userData.letiableTime + '</span><br>';\n\t            txt += 'Value: <span id=\"balloon-letiable-value\">' + intersected.userData.letiableValue + '</span> ' + intersected.userData.letiableUnits;\n\t          }\n\t          updateColorBarSelection(intersected.userData.letiableValue);\n\t          break;\n\t      }\n\t\n\t      headsUp.innerHTML = txt;\n\t      document.body.style.cursor = 'pointer';\n\t    } else {\n\t      removeSelection();\n\t    }\n\t  }\n\t}\n\t\n\tfunction init(os_data_in) {\n\t  os_data = os_data_in;\n\t\n\t  var css = document.head.appendChild(document.createElement('style'));\n\t  css.innerHTML = 'body { font:600 12pt monospace; margin:0; overflow:hidden; }';\n\t\n\t  headsUp = document.body.appendChild(document.createElement('div'));\n\t  headsUp.setAttribute('id', 'heads-up');\n\t\n\t  colorBarHeight = 40;\n\t  colorBarWidth = 256;\n\t  colorBar = document.createElement('canvas');\n\t  colorBar.setAttribute('id', 'color-bar');\n\t  colorBar.setAttribute('height', colorBarHeight);\n\t  colorBar.setAttribute('width', colorBarWidth);\n\t\n\t  document.documentElement.setAttribute('ondrop', 'drop(event)');\n\t  document.documentElement.setAttribute('ondragover', 'allowDrop(event)');\n\t\n\t  var top = getFloatFromLocalStorage('colorBarTop', 0);\n\t  var left = getFloatFromLocalStorage('colorBarLeft', 0);\n\t  colorBarContainer = document.body.appendChild(document.createElement('div'));\n\t  colorBarContainer.setAttribute('id', 'color-bar-container');\n\t  colorBarContainer.setAttribute('draggable', 'true');\n\t  colorBarContainer.setAttribute('ondragstart', 'drag(event)');\n\t  colorBarContainer.style.height = colorBarHeight + 112 + 'px';\n\t  colorBarContainer.style.width = colorBarWidth + 42 + 'px';\n\t  colorBarContainer.style.top = top + 'px';\n\t  colorBarContainer.style.left = left + 'px';\n\t  if (settings.rotateColorBar) colorBarContainer.classList.add('rotate');\n\t  colorBarContainer.appendChild(colorBar);\n\t\n\t  var bar = document.createElement('div');\n\t  bar.classList.add('color-bar-tick');\n\t  bar.style.bottom = colorBarHeight + 21 + 'px';\n\t  bar.style.left = 20 + 'px';\n\t  colorBarContainer.appendChild(bar);\n\t  bar = bar.cloneNode();\n\t  bar.style.left = 20 + colorBarWidth + 'px';\n\t  colorBarContainer.appendChild(bar);\n\t  bar = bar.cloneNode();\n\t  bar.setAttribute('id', 'color-bar-selection-line');\n\t  bar.style.display = 'none';\n\t  bar.style.bottom = '20px';\n\t  bar.style.height = '56px';\n\t  colorBarContainer.appendChild(bar);\n\t\n\t  var text = document.createElement('span');\n\t  text.classList.add('color-bar-text');\n\t  text.setAttribute('id', 'color-bar-min');\n\t  text.style.bottom = colorBarHeight + 30 + 'px';\n\t  text.style.left = 10 + 'px';\n\t  colorBarContainer.appendChild(text);\n\t  text = text.cloneNode();\n\t  text.setAttribute('id', 'color-bar-max');\n\t  text.style.left = 10 + colorBarWidth + 'px';\n\t  colorBarContainer.appendChild(text);\n\t  text = text.cloneNode();\n\t  text.setAttribute('id', 'color-bar-selection-text');\n\t  colorBarContainer.appendChild(text);\n\t\n\t  renderer = new THREE.WebGLRenderer({\n\t    alpha: 1,\n\t    antialias: true,\n\t    clearColor: 0xffffff\n\t  });\n\t  renderer.setSize(window.innerWidth, window.innerHeight);\n\t  renderer.shadowMapEnabled = true;\n\t  renderer.shadowMapSoft = true;\n\t  document.body.appendChild(renderer.domElement);\n\t\n\t  scene = new THREE.Scene();\n\t  window.scene = scene;\n\t\n\t  var aspect = window.innerWidth / window.innerHeight;\n\t  orthographicCamera = new THREE.OrthographicCamera(4 * aspect * os_data.metadata.boundingBox.lookAtR / -2, 4 * aspect * os_data.metadata.boundingBox.lookAtR / 2, 4 * os_data.metadata.boundingBox.lookAtR / 2, 4 * os_data.metadata.boundingBox.lookAtR / -2, 1, 5000);\n\t  scene.add(orthographicCamera);\n\t  orthographicCamera.up.set(0, 1, 0);\n\t  orthographicCamera.lookAt(cameraLookAt());\n\t\n\t  perspectiveCamera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 5000);\n\t  scene.add(perspectiveCamera);\n\t  perspectiveCamera.up.set(0, 1, 0);\n\t  perspectiveCamera.lookAt(cameraLookAt());\n\t\n\t  orthographicControls = new THREE.OrbitControls(orthographicCamera, renderer.domElement);\n\t  orthographicControls.minDistance = 10;\n\t  orthographicControls.maxDistance = 1000;\n\t  orthographicControls.enabled = true;\n\t\n\t  perspectiveControls = new THREE.OrbitControls(perspectiveCamera, renderer.domElement);\n\t  perspectiveControls.minDistance = 10;\n\t  perspectiveControls.maxDistance = 1000;\n\t  perspectiveControls.enabled = true;\n\t\n\t  setAllCameraAngles(-30, 30, 0);\n\t\n\t  light = new THREE.AmbientLight(0xbbbbbb);\n\t  scene.add(light);\n\t\n\t  var axisSize = cameraRadius();\n\t\n\t  var xAxisMaterial = new THREE.LineBasicMaterial({ color: 0xff0000 });\n\t  var xAxisGeometry = new THREE.Geometry();\n\t  xAxisGeometry.vertices.push(new THREE.Vector3(0, 0, 0), new THREE.Vector3(axisSize, 0, 0));\n\t  scene.add(new THREE.Line(xAxisGeometry, xAxisMaterial));\n\t\n\t  var yAxisMaterial = new THREE.LineBasicMaterial({ color: 0x00ff00 });\n\t  var yAxisGeometry = new THREE.Geometry();\n\t  yAxisGeometry.vertices.push(new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, -axisSize));\n\t  scene.add(new THREE.Line(yAxisGeometry, yAxisMaterial));\n\t\n\t  var zAxisMaterial = new THREE.LineBasicMaterial({ color: 0x0000ff });\n\t  var zAxisGeometry = new THREE.Geometry();\n\t  zAxisGeometry.vertices.push(new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, axisSize, 0));\n\t  scene.add(new THREE.Line(zAxisGeometry, zAxisMaterial));\n\t\n\t  project = new THREE.Object3D();\n\t  scene.add(project);\n\t\n\t  var loader = new THREE.ObjectLoader();\n\t  var data = loader.parse(os_data);\n\t  project.add(data);\n\t\n\t  scene_objects = project.children[0].children;\n\t\n\t  var temp = {};\n\t  scene_objects.forEach(function (object) {\n\t    temp[object.userData.handle] = object;\n\t  });\n\t\n\t  coincident_objects = {};\n\t  scene_objects.forEach(function (object) {\n\t    if (object.userData.coincidentWithOutsideObject) {\n\t      coincident_objects[object.uuid] = temp[object.userData.outsideBoundaryConditionObjectHandle];\n\t    }\n\t  });\n\t\n\t  scene_edges = [];\n\t  back_objects = {};\n\t  object_edges = {};\n\t  scene_objects.forEach(function (object) {\n\t    var edges = new THREE.EdgesHelper(object, 0x000000);\n\t    scene.add(edges);\n\t    var edge = scene.children[scene.children.length - 1];\n\t    scene_edges.push(edge);\n\t    object_edges[object.uuid] = edge;\n\t\n\t    var back_object = object.clone();\n\t    back_object.visible = false;\n\t    back_object.name += ' Back';\n\t    scene.add(back_object);\n\t    back_object = scene.children[scene.children.length - 1];\n\t    back_object.geometry = object.geometry.clone();\n\t    back_objects[object.uuid] = back_object;\n\t  });\n\t\n\t  raycaster = new THREE.Raycaster();\n\t  mouse = new THREE.Vector2();\n\t\n\t  selected_material = new THREE.MeshPhongMaterial({\n\t    name: 'Selected',\n\t    color: 0xffff00,\n\t    ambient: 0xffff00,\n\t    specular: 0xffff00,\n\t    emissive: 0xffff00,\n\t    shininess: 50,\n\t    side: THREE.DoubleSide\n\t  });\n\t  materials = parseMaterials(os_data.materials);\n\t\n\t  renderer.domElement.addEventListener('mousedown', onDocumentMouseDown, false);\n\t  renderer.domElement.addEventListener('click', onDocumentMouseClick, false);\n\t}\n\t\n\tfunction animate() {\n\t  requestAnimationFrame(animate);\n\t  orthographicControls.update();\n\t  perspectiveControls.update();\n\t  if (settings.orthographic) {\n\t    renderer.render(scene, orthographicCamera);\n\t  } else {\n\t    renderer.render(scene, perspectiveCamera);\n\t  }\n\t}\n\t\n\tvar initDatGui = function initDatGui() {\n\t  var has_data = os_data.metadata.letiables && os_data.metadata.letiables.length;\n\t\n\t  dat.GUI.prototype.removeFolder = function (name) {\n\t    this.__folders[name].close();\n\t    this.__folders[name].domElement.parentNode.parentNode.removeChild(this.__folders[name].domElement.parentNode);\n\t    this.__folders[name] = undefined;\n\t    this.onResize();\n\t  };\n\t\n\t  gui = new dat.GUI();\n\t\n\t  var render_modes = ['Surface Type', 'Normal', 'Thermal Zone', 'Space Type', 'Building Story'];\n\t  if (has_data) {\n\t    render_modes.push('Data');\n\t  }\n\t  gui.add(settings, 'renderBy', render_modes).name('Render By').onChange(function (value) {\n\t    removeSelection();\n\t    update(value);\n\t  });\n\t\n\t  var building_story_names = os_data.metadata.buildingStoryNames;\n\t  building_story_names.unshift('All Stories');\n\t  gui.add(settings, 'showStory', building_story_names).name('Show Story').onChange(function (value) {\n\t    removeSelection();\n\t    update(value);\n\t  });\n\t\n\t  var f1 = gui.addFolder('Surface Filters');\n\t  f1.add(settings, 'showFloors').name('Show Floors').onChange(function (value) {\n\t    removeSelection();\n\t    setLocalStorage('showFloors', value);\n\t    update(value);\n\t  });\n\t  f1.add(settings, 'showWalls').name('Show Walls').onChange(function (value) {\n\t    removeSelection();\n\t    setLocalStorage('showWalls', value);\n\t    update(value);\n\t  });\n\t  f1.add(settings, 'showRoofCeilings').name('Show Roofs').onChange(function (value) {\n\t    removeSelection();\n\t    setLocalStorage('showRoofCeilings', value);\n\t    update(value);\n\t  });\n\t  f1.add(settings, 'showWindows').name('Show Windows').onChange(function (value) {\n\t    removeSelection();\n\t    setLocalStorage('showWindows', value);\n\t    update(value);\n\t  });\n\t  f1.add(settings, 'showDoors').name('Show Doors').onChange(function (value) {\n\t    removeSelection();\n\t    setLocalStorage('showDoors', value);\n\t    update(value);\n\t  });\n\t  f1.add(settings, 'showShading').name('Show Shading').onChange(function (value) {\n\t    removeSelection();\n\t    setLocalStorage('showShading', value);\n\t    update(value);\n\t  });\n\t  f1.add(settings, 'showPartitions').name('Show Partitions').onChange(function (value) {\n\t    removeSelection();\n\t    setLocalStorage('showPartitions', value);\n\t    update(value);\n\t  });\n\t  f1.add(settings, 'showWireframe').name('Show Wireframe').onChange(function (value) {\n\t    removeSelection();\n\t    setLocalStorage('showWireframe', value);\n\t    update(value);\n\t  });\n\t  f1.open();\n\t\n\t  var f2 = gui.addFolder('Camera');\n\t  f2.add(settings, 'orthographic').name('Orthographic').onChange(function (value) {\n\t    setLocalStorage('orthographic', value);\n\t  });\n\t  f2.add(settings, 'xView').name('X View');\n\t  f2.add(settings, 'yView').name('Y View');\n\t  f2.add(settings, 'zView').name('Z View');\n\t  f2.add(settings, 'reset').name('Reset');\n\t  f2.open();\n\t\n\t  update();\n\t};\n\t\n\tvar storageKey = 'floorplan3DExport';\n\tModule.addOnPostRun(function () {\n\t  var floorplanStr = localStorage.getItem(storageKey);\n\t  if (floorplanStr) {\n\t    var threejsStr = Module.floorplanToThreeJS(floorplanStr, false);\n\t    var threejs = JSON.parse(threejsStr);\n\t    init(threejs);\n\t    animate();\n\t    initDatGui();\n\t  }\n\t\n\t  window.onstorage = function (event) {\n\t    if (event.key === storageKey) {\n\t      location.reload();\n\t    }\n\t  };\n\t});\n\n/***/ }),\n\n/***/ 605:\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/viewer.2d88d85ae0b3091297b4.js","import './styles.css';\nimport './main';\n\n\n\n// WEBPACK FOOTER //\n// ./3DViewer/viewer/index.js","let os_data;\n\nlet renderer, scene, light, scene_objects, scene_edges, object_edges, coincident_objects, back_objects;\nlet perspectiveCamera, orthographicCamera, perspectiveControls, orthographicControls;\nlet project, materials, letiable;\nlet dateTimeControl;\nlet colorBar, colorBarContainer, colorBarHeight, colorBarWidth;\nlet mouseDownX, mouseDownY;\n\nlet raycaster;\nlet mouse;\nlet headsUp;\nlet intersected, selected_material;\n\nconst getStringFromLocalStorage = function (key, defaultValue) {\n  try {\n    const value = localStorage.getItem(key);\n    if (value == null) {\n      return defaultValue;\n    }\n    return value;\n  } catch (e) {\n    return defaultValue;\n  }\n};\n\nconst getBoolFromLocalStorage = function (key, defaultValue) {\n  try {\n    const value = localStorage.getItem(key);\n    if (value == null) {\n      return defaultValue;\n    }\n    return (value === 'true');\n  } catch (e) {\n    return defaultValue;\n  }\n};\n\nconst getFloatFromLocalStorage = function (key, defaultValue) {\n  try {\n    const value = localStorage.getItem(key);\n    if (value == null) {\n      return defaultValue;\n    }\n    return parseFloat(value);\n  } catch (e) {\n    return defaultValue;\n  }\n};\n\nconst setLocalStorage = function (key, value) {\n  try {\n    localStorage.setItem(key, value);\n  } catch (_) {\n    // Drop error\n  }\n};\n\nfunction cameraLookAt() {\n  return new THREE.Vector3(os_data.metadata.boundingBox.lookAtX, os_data.metadata.boundingBox.lookAtZ, -os_data.metadata.boundingBox.lookAtY);\n}\n\nfunction cameraRadius() {\n  return 4 * os_data.metadata.boundingBox.lookAtR;\n}\n\n// theta is rotation about OpenStudio Z in degrees, phi is rotation above ground plane in degrees\nfunction setCameraAngles(camera, controls, theta, phi, tweenTime) {\n  const aim = cameraLookAt();\n\n  const startRadius = Math.sqrt(Math.pow(camera.position.x - aim.x, 2) + Math.pow(camera.position.y - aim.y, 2) + Math.pow(camera.position.z - aim.z, 2));\n  const endRadius = cameraRadius();\n  const endX = endRadius * Math.cos(theta * Math.PI / 180.0) * Math.cos(phi * Math.PI / 180.0) + aim.x; // X in OpenStudio coordinates\n  const endY = endRadius * Math.sin(phi * Math.PI / 180.0) + aim.y; // Z in OpenStudio coordinates\n  const endZ = -endRadius * Math.sin(theta * Math.PI / 180.0) * Math.cos(phi * Math.PI / 180.0) + aim.z; // Y in OpenStudio coordinates\n\n  let endUpX = 0;\n  let endUpY = 1;\n  let endUpZ = 0;\n  if (phi === 90) {\n    endUpX = 0;\n    endUpY = 1;\n    endUpZ = -0.01;\n  }\n\n  const target = {\n    progress: 0,\n    start: {\n      x: camera.position.x,\n      y: camera.position.y,\n      z: camera.position.z,\n      r: startRadius,\n      theta: Math.acos(camera.position.z / startRadius),\n      phi: Math.atan2(camera.position.y, camera.position.x),\n      upX: camera.up.x,\n      upY: camera.up.y,\n      upZ: camera.up.z,\n      lookAtX: controls.target.x,\n      lookAtY: controls.target.y,\n      lookAtZ: controls.target.z,\n      targetX: controls.target.x,\n      targetY: controls.target.y,\n      targetZ: controls.target.z,\n      zoom: camera.zoom,\n    },\n    end: {\n      x: endX,\n      y: endY,\n      z: endZ,\n      r: endRadius,\n      theta: Math.acos(endZ / endRadius),\n      phi: Math.atan2(endY, endX),\n      upX: endUpX,\n      upY: endUpY,\n      upZ: endUpZ,\n      lookAtX: aim.x,\n      lookAtY: aim.y,\n      lookAtZ: aim.z,\n      targetX: aim.x,\n      targetY: aim.y,\n      targetZ: aim.z,\n      zoom: 1,\n    },\n  };\n\n  TweenLite.to(target, tweenTime, {\n    progress: 1,\n    ease: Power3.easeInOut,\n    onUpdate(tween) {\n      const r = tween.target.start.r + tween.target.progress * (tween.target.end.r - tween.target.start.r);\n      const theta = tween.target.start.theta + tween.target.progress * (tween.target.end.theta - tween.target.start.theta);\n      const phi = tween.target.start.phi + tween.target.progress * (tween.target.end.phi - tween.target.start.phi);\n      const zoom = tween.target.start.zoom + tween.target.progress * (tween.target.end.zoom - tween.target.start.zoom);\n      const x = r * Math.sin(theta) * Math.cos(phi);\n      const y = r * Math.sin(theta) * Math.sin(phi);\n      const z = r * Math.cos(theta);\n      const upX = tween.target.start.upX + tween.target.progress * (tween.target.end.upX - tween.target.start.upX);\n      const upY = tween.target.start.upY + tween.target.progress * (tween.target.end.upY - tween.target.start.upY);\n      const upZ = tween.target.start.upZ + tween.target.progress * (tween.target.end.upZ - tween.target.start.upZ);\n      const lookAtX = tween.target.start.lookAtX + tween.target.progress * (tween.target.end.lookAtX - tween.target.start.lookAtX);\n      const lookAtY = tween.target.start.lookAtY + tween.target.progress * (tween.target.end.lookAtY - tween.target.start.lookAtY);\n      const lookAtZ = tween.target.start.lookAtZ + tween.target.progress * (tween.target.end.lookAtZ - tween.target.start.lookAtZ);\n      const targetX = tween.target.start.targetX + tween.target.progress * (tween.target.end.targetX - tween.target.start.targetX);\n      const targetY = tween.target.start.targetY + tween.target.progress * (tween.target.end.targetY - tween.target.start.targetY);\n      const targetZ = tween.target.start.targetZ + tween.target.progress * (tween.target.end.targetZ - tween.target.start.targetZ);\n\n      camera.position.set(x, y, z);\n      camera.zoom = zoom;\n      camera.up.set(upX, upY, upZ);\n      camera.lookAt(new THREE.Vector3(lookAtX, lookAtY, lookAtZ));\n      camera.updateProjectionMatrix();\n\n      controls.target = new THREE.Vector3(targetX, targetY, targetZ);\n    },\n    onUpdateParams: ['{self}'],\n    onComplete() {\n      camera.position.set(endX, endY, endZ);\n      camera.zoom = 1;\n      camera.up.set(endUpX, endUpY, endUpZ);\n      camera.lookAt(aim);\n      camera.updateProjectionMatrix();\n\n      controls.target = aim;\n    },\n  });\n}\n\nfunction setAllCameraAngles(theta, phi, tweenTime) {\n  let perspectiveTweenTime = tweenTime;\n  let orthographicTweenTime = tweenTime;\n  if (getBoolFromLocalStorage('useOthrographic', false)) {\n    perspectiveTweenTime = 0;\n  } else {\n    orthographicTweenTime = 0;\n  }\n  setCameraAngles(perspectiveCamera, perspectiveControls, theta, phi, perspectiveTweenTime);\n  setCameraAngles(orthographicCamera, orthographicControls, theta, phi, orthographicTweenTime);\n}\n\nconst settings = {\n  renderBy: 'Surface Type',\n  showStory: 'All Stories',\n  showFloors: getBoolFromLocalStorage('showFloors', true),\n  showWalls: getBoolFromLocalStorage('showWalls', true),\n  showRoofCeilings: getBoolFromLocalStorage('showRoofCeilings', true),\n  showWindows: getBoolFromLocalStorage('showWindows', true),\n  showDoors: getBoolFromLocalStorage('showDoors', true),\n  showShading: getBoolFromLocalStorage('showShading', true),\n  showPartitions: getBoolFromLocalStorage('showPartitions', true),\n  showWireframe: getBoolFromLocalStorage('showWireframe', true),\n  xView() { setAllCameraAngles(0, 0, 1); },\n  yView() { setAllCameraAngles(-90, 0, 1); },\n  zView() { setAllCameraAngles(0, 90, 1); },\n  reset() { setAllCameraAngles(-30, 30, 1); },\n  orthographic: getBoolFromLocalStorage('useOthrographic', false),\n  xSection: 0,\n  ySection: 0,\n  zSection: 0,\n  letiableName: '',\n  colorScheme: getStringFromLocalStorage('colorScheme', 'diverging'),\n  daySlider: 0,\n  hourSlider: 1,\n  cycleHour: false,\n  cycleSpeed: getFloatFromLocalStorage('cycleSpeed', 1.0),\n  rotateColorBar: getBoolFromLocalStorage('rotateColorBar', false),\n  dateTime: '',\n};\n\nfunction erf(x) {\n  // constants\n  const a1 = 0.254829592;\n  const a2 = -0.284496736;\n  const a3 = 1.421413741;\n  const a4 = -1.453152027;\n  const a5 = 1.061405429;\n  const p = 0.3275911;\n\n  // Save the sign of x\n  let sign = 1;\n  if (x < 0) {\n    sign = -1;\n  }\n  const absX = Math.abs(x);\n\n  // A&S formula 7.1.26\n  const t = 1.0 / (1.0 + p * absX);\n  const y = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-absX * absX);\n\n  return sign * y;\n}\n\nconst getColor = function (x, min, max, palette) {\n  if (x == null) {\n    return new THREE.Color(255, 255, 255);\n  }\n\n  const newX = Math.min(Math.max(x, min), max);\n  const percent = (newX - min) / (max - min);\n  let r = 1 - percent;\n  let b = 1 - percent;\n  let g = 1 - percent;\n\n  switch (palette) {\n    case 'sequential':\n      r = 1 - 0.392 * (1 + erf((percent - 0.869) / 0.255));\n      g = 1.021 - 0.456 * (1 + erf((percent - 0.527) / 0.376));\n      b = 1 - 0.493 * (1 + erf((percent - 0.272) / 0.309));\n      break;\n    case 'diverging':\n      r = 0.237 - 2.13 * percent + 26.92 * Math.pow(percent, 2) - 65.5 * Math.pow(percent, 3) + 63.5 * Math.pow(percent, 4) - 22.36 * Math.pow(percent, 5);\n      g = Math.pow((0.572 + 1.524 * percent - 1.811 * Math.pow(percent, 2)) / (1 - 0.291 * percent + 0.1574 * Math.pow(percent, 2)), 2);\n      b = 1 / (1.579 - 4.03 * percent + 12.92 * Math.pow(percent, 2) - 31.4 * Math.pow(percent, 3) + 48.6 * Math.pow(percent, 4) - 23.36 * Math.pow(percent, 5));\n      break;\n    case 'rainbow':\n      r = (0.472 - 0.567 * percent + 4.05 * Math.pow(percent, 2)) / (1 + 8.72 * percent - 19.17 * Math.pow(percent, 2) + 14.1 * Math.pow(percent, 3));\n      g = 0.108932 - 1.22635 * percent + 27.284 * Math.pow(percent, 2) - 98.577 * Math.pow(percent, 3) + 163.3 * Math.pow(percent, 4) - 131.395 * Math.pow(percent, 5) + 40.634 * Math.pow(percent, 6);\n      b = 1 / (1.97 + 3.54 * percent - 68.5 * Math.pow(percent, 2) + 243 * Math.pow(percent, 3) - 297 * Math.pow(percent, 4) + 125 * Math.pow(percent, 5));\n      break;\n  }\n  return new THREE.Color(r, g, b);\n};\nfunction fitInWindow() {\n  const container = document.getElementById('color-bar-container');\n  const style = container.style;\n  if (!settings.rotateColorBar) {\n    const height = colorBarHeight + 112;\n    const width = colorBarWidth + 42;\n    const top = parseInt(style.top, 10);\n    const left = parseInt(style.left, 10);\n    if (left < 0) {\n      style.left = 0;\n    } else if (window.innerWidth < (left + width)) {\n      style.left = `${window.innerWidth - width}px`;\n    }\n    if (top < 0) {\n      style.top = 0;\n    } else if (window.innerHeight < (top + height)) {\n      style.top = `${window.innerHeight - height}px`;\n    }\n  } else {\n    const half = (colorBarWidth + 42) / 2;\n    const height = colorBarWidth + 42;\n    const width = colorBarHeight + 112;\n    const top = parseInt(style.top, 10) - half;\n    const left = parseInt(style.left, 10) + half;\n    if (left < 0) {\n      style.left = `${-half}px`;\n    } else if (window.innerWidth < (left + width)) {\n      style.left = `${window.innerWidth - width - half}px`;\n    }\n    if (top < 0) {\n      style.top = `${half}px`;\n    } else if (window.innerHeight < (top + height)) {\n      style.top = `${window.innerHeight - height + half}px`;\n    }\n  }\n}\nfunction updateColorBarSelection(value) {\n  const line = document.getElementById('color-bar-selection-line');\n  const text = document.getElementById('color-bar-selection-text');\n  if (value !== '') {\n    const percent = (value - letiable.valueMin) / (letiable.valueMax - letiable.valueMin);\n    line.style.left = `${20 + colorBarWidth * percent}px`;\n    text.style.left = `${10 + colorBarWidth * percent}px`;\n    text.innerHTML = Math.round(value * 100) / 100;\n  } else {\n    line.style.display = 'none';\n    text.style.display = 'none';\n  }\n}\nfunction updateBalloon(object) {\n  let span = document.getElementById('balloon-letiable-name');\n  if (span) span.innerHTML = object.userData.letiableName;\n\n  span = document.getElementById('balloon-letiable-key-name');\n  if (span) span.innerHTML = object.userData.letiableKeyName;\n\n  span = document.getElementById('balloon-letiable-date');\n  if (span) span.innerHTML = object.userData.letiableDate;\n\n  span = document.getElementById('balloon-letiable-time');\n  if (span) span.innerHTML = object.userData.letiableTime;\n\n  span = document.getElementById('balloon-letiable-value');\n  if (span) span.innerHTML = object.userData.letiableValue;\n}\n\nfunction restoreLastMaterial(object) {\n  // console.log(\"Restoring last material to \" + object.name);\n\n  object.visible = object.wasVisible;\n  object.material = object.lastMaterial;\n  if (object.material) {\n    object.material.needsUpdate = true;\n  }\n  object.lastMaterial = null;\n}\n\nfunction setSelectedMaterial(object) {\n  // console.log(\"Selecting \" + object.name);\n\n  object.wasVisible = object.visible;\n  object.lastMaterial = object.material;\n  object.visible = true;\n  object.material = selected_material;\n  object.material.needsUpdate = true;\n}\n\nfunction removeMaterial(object) {\n  // console.log(\"Removing material from \" + object.name);\n\n  object.wasVisible = object.visible;\n  object.lastMaterial = object.material;\n  object.visible = false;\n  object.material = null;\n}\n\nconst updateColorBar = function () {\n  const ctx = colorBar.getContext('2d');\n  const colorBarData = ctx.createImageData(colorBarWidth, colorBarHeight);\n  const colorBarRow = [];\n  for (let i = 0; i < colorBarWidth; i++) {\n    const pixel = getColor(i, 0, colorBarWidth - 1, settings.colorScheme);\n    colorBarRow[i * 4] = pixel.r * 255;\n    colorBarRow[i * 4 + 1] = pixel.g * 255;\n    colorBarRow[i * 4 + 2] = pixel.b * 255;\n    colorBarRow[i * 4 + 3] = 255;\n  }\n  for (let i = 0; i < colorBarData.data.length; i++) {\n    colorBarData.data[i] = colorBarRow[i % (colorBarWidth * 4)];\n  }\n  ctx.putImageData(colorBarData, 0, 0);\n\n  document.getElementById('color-bar-min').innerHTML = Math.round(letiable.valueMin * 100) / 100;\n  document.getElementById('color-bar-max').innerHTML = Math.round(letiable.valueMax * 100) / 100;\n};\n\nlet gui = null;\nlet dataFolder = null;\nfunction update() {\n  const renderBy = settings.renderBy;\n  const isData = (renderBy === 'Data');\n  if (isData && !dataFolder) {\n    const letiable_names = [];\n    os_data.letiables.forEach((os_data_let) => {\n      letiable_names.push(os_data_let.name);\n    });\n    letiable = os_data.letiables[0];\n    settings.letiableName = letiable.name;\n\n    dataFolder = gui.addFolder('Data Rendering');\n    dataFolder.add(settings, 'letiableName', letiable_names).name('letiable').onChange((letiableName) => {\n      const letiables = os_data.letiables.filter(x => x.name === letiableName);\n      if (letiables.length) {\n        letiable = letiables[0];\n      }\n      updateColorBar();\n      update();\n    });\n    dataFolder.add(settings, 'colorScheme', { Grayscale: 'grayscale', Sequential: 'sequential', Diverging: 'diverging', Rainbow: 'rainbow' }).name('Color Scheme').onChange((value) => {\n      setLocalStorage('colorScheme', value);\n      updateColorBar();\n      update(value);\n    });\n    dataFolder.add(settings, 'daySlider', 0, letiable.numDays - 1, 1).name('Day').onChange(update);\n    dataFolder.add(settings, 'hourSlider', letiable.hoursPerInterval, 24).step(letiable.hoursPerInterval).name('Hour').listen()\n      .onChange(update);\n    dateTimeControl = dataFolder.add(settings, 'dateTime').name('Date Time').listen();\n    dataFolder.add(settings, 'rotateColorBar').name('Rotate Color Bar').onChange((value) => {\n      if (value) {\n        colorBarContainer.classList.add('rotate');\n      } else {\n        colorBarContainer.classList.remove('rotate');\n      }\n      fitInWindow();\n      setLocalStorage('rotateColorBar', value);\n    });\n    dataFolder.add(settings, 'cycleHour').name('Cycle Hour').onChange((cycleHourValue) => {\n      if (cycleHourValue) {\n        const cycleHour = () => {\n          if (settings.cycleHour) {\n            settings.hourSlider = settings.hourSlider % 24 + 1;\n            update();\n            setTimeout(cycleHour, 1000 / settings.cycleSpeed);\n          }\n        };\n\n        cycleHour();\n      }\n    });\n    dataFolder.add(settings, 'cycleSpeed', 1, 10).name('Cycle Speed').onChange((value) => {\n      setLocalStorage('cycleSpeed', value);\n    });\n    dataFolder.open();\n    document.getElementById('color-bar-container').style.display = 'block';\n    fitInWindow();\n    updateColorBar();\n  } else if (!isData && dataFolder) {\n    gui.removeFolder('Data Rendering');\n    dataFolder = null;\n    if (settings.cycleHour) {\n      settings.cycleHour = false;\n    }\n    document.getElementById('color-bar-container').style.display = 'none';\n  }\n\n  let i = null;\n  let date = '';\n  let time = '';\n  let units = '';\n  if (isData && letiable) {\n    i = Math.floor(letiable.intervalsPerDay * Math.floor(settings.daySlider) + letiable.intervalsPerHour * Math.floor(settings.hourSlider)) - 1;\n    const t = os_data.times[letiable.timeIndex][i];\n    const d = new Date(0); // The 0 there is the key, which sets the date to the epoch\n    d.setUTCSeconds(t);\n\n    date = `${(`0${d.getUTCMonth() + 1}`).slice(-2)}/${(`0${d.getUTCDate()}`).slice(-2)}`;\n    time = `${(`0${d.getUTCHours()}`).slice(-2)}:${(`0${d.getUTCMinutes()}`).slice(-2)}`;\n\n    settings.dateTime = `${date} - ${time}`;\n    dateTimeControl.updateDisplay();\n\n    if (letiable.units.length) {\n      units = `(${letiable.units})`;\n    }\n  }\n\n  scene_objects.forEach((object) => {\n    const surfaceType = object.userData.surfaceType;\n\n    object.visible = true;\n\n    if (settings.showStory === 'All Stories' || settings.showStory === object.userData.buildingStoryName) {\n      // no-op\n    } else {\n      object.visible = false;\n    }\n\n    if (!settings.showFloors && surfaceType === 'Floor') {\n      object.visible = false;\n    } else if (!settings.showWalls && surfaceType === 'Wall') {\n      object.visible = false;\n    } else if (!settings.showRoofCeilings && surfaceType === 'RoofCeiling') {\n      object.visible = false;\n    } else if (!settings.showWindows && surfaceType.indexOf('Window') > -1) {\n      object.visible = false;\n    } else if (!settings.showWindows && surfaceType.indexOf('GlassDoor') > -1) {\n      // hide these with doors\n      // object.visible = false;\n    } else if (!settings.showWindows && surfaceType.indexOf('Skylight') > -1) {\n      object.visible = false;\n    } else if (!settings.showWindows && surfaceType.indexOf('TubularDaylight') > -1) {\n      object.visible = false;\n    } else if (!settings.showDoors && surfaceType.indexOf('Door') > -1) {\n      object.visible = false;\n    } else if (!settings.showShading && (surfaceType.indexOf('Shading') > -1)) {\n      object.visible = false;\n    } else if (!settings.showPartitions && (surfaceType === 'InteriorPartitionSurface')) {\n      object.visible = false;\n    }\n\n    let material = null;\n    let material_double_sided = null;\n    let material_back = null;\n    let value,\n      keyName,\n      object_letiables;\n    switch (renderBy) {\n      case 'Surface Type':\n        material = materials[object.userData.surfaceTypeMaterialName];\n        material_double_sided = material;\n        if (coincident_objects[object.uuid]) {\n          // coincident object present, only show inside face\n          material = materials[`${object.userData.surfaceTypeMaterialName}_Int`];\n        }\n        material_back = materials[`${object.userData.surfaceTypeMaterialName}_Int`];\n        break;\n      case 'Normal':\n        material = materials.NormalMaterial;\n        material_double_sided = material;\n        if (coincident_objects[object.uuid]) {\n          // coincident object present, only show inside face\n          material = materials.NormalMaterial_Int;\n        }\n        material_back = materials.NormalMaterial_Int;\n        break;\n      case 'Boundary':\n        material = materials[object.userData.boundaryMaterialName];\n        break;\n      case 'Construction':\n        material = materials[object.userData.constructionMaterialName];\n        break;\n      case 'Thermal Zone':\n        material = materials[object.userData.thermalZoneMaterialName];\n        break;\n      case 'Space Type':\n        material = materials[object.userData.spaceTypeMaterialName];\n        break;\n      case 'Building Story':\n        material = materials[object.userData.buildingStoryMaterialName];\n        break;\n      case 'Data':\n        value = null;\n        keyName = '';\n        object_letiables = object.userData.letiables.filter(x => x.name === settings.letiableName);\n        if (object_letiables.length > 0) {\n          const object_letiable = object_letiables[0];\n          if (object_letiable.valueIndex !== null) {\n            value = letiable.values[object_letiable.valueIndex][i];\n          }\n          if (object_letiable.keyName !== null) {\n            keyName = object_letiable.keyName;\n          }\n        }\n\n        if (value !== null) {\n          object.userData.letiableName = settings.letiableName;\n          object.userData.letiableDate = date;\n          object.userData.letiableTime = time;\n          object.userData.letiableKeyName = keyName;\n          object.userData.letiableValue = value;\n          object.userData.letiableUnits = units;\n        } else {\n          object.userData.letiableName = settings.letiableName;\n          object.userData.letiableDate = date;\n          object.userData.letiableTime = time;\n          object.userData.letiableKeyName = keyName;\n          object.userData.letiableValue = '';\n          object.userData.letiableUnits = units;\n        }\n\n        material = new THREE.MeshBasicMaterial({ side: THREE.DoubleSide });\n        material.color.set(getColor(value, letiable.valueMin, letiable.valueMax, settings.colorScheme));\n        break;\n    }\n\n    if (intersected) {\n      updateBalloon(intersected);\n      updateColorBarSelection(intersected.userData.letiableValue);\n    }\n\n    if (!material) {\n      material = materials.Undefined;\n      console.log(`${renderBy}: could not find material for ${JSON.stringify(object.userData)}`);\n    }\n    if (!material_double_sided) {\n      material_double_sided = material;\n    }\n    if (!material_back) {\n      material_back = material;\n    }\n\n    object.material = material;\n    object.material_double_sided = material_double_sided;\n    if (material !== null) {\n      object.material.needsUpdate = true;\n    }\n\n    const edge = object_edges[object.uuid];\n    if (settings.showWireframe || object.visible) {\n      edge.visible = true;\n    } else {\n      edge.visible = false;\n    }\n\n    const back_object = back_objects[object.uuid];\n    if (back_object) {\n      back_object.material = material_back;\n      if (material_back !== null) {\n        back_object.visible = object.visible;\n        back_object.material.needsUpdate = true;\n      } else {\n        back_object.visible = false;\n      }\n    }\n  });\n\n  // turn off back objects where coincident objects are visible\n  scene_objects.forEach((object) => {\n    if (object.visible) {\n      const coincident_object = coincident_objects[object.uuid];\n      if (coincident_object) {\n        const back_object = back_objects[object.uuid];\n        if (back_object) {\n          if (coincident_object.visible) {\n            // coincident object is visible, hide back object\n            back_object.visible = false;\n          } else {\n            // coincident object is not visible, show back object\n            back_object.visible = true;\n\n            if (object.material_double_sided) {\n              // switch to double sided material so we can select this\n              object.material = object.material_double_sided;\n              object.material.needsUpdate = true;\n            }\n          }\n        }\n      }\n    }\n  });\n}\n\nfunction selectObject(object) {\n  const renderBy = settings.renderBy;\n  const isData = (renderBy === 'Data');\n\n  if (intersected !== object) {\n    // restore material on currently selected\n    if (intersected) {\n      const edges = object_edges[intersected.uuid];\n      if (edges) {\n        edges.material.color.setRGB(0, 0, 0);\n        edges.material.linewidth = 1;\n        edges.material.needsUpdate = true;\n      }\n    }\n    if (!isData && intersected) {\n      restoreLastMaterial(intersected);\n\n      const coincident_intersected = coincident_objects[intersected.uuid];\n      if (coincident_intersected) {\n        restoreLastMaterial(coincident_intersected);\n      }\n\n      const back_intersected = back_objects[intersected.uuid];\n      if (back_intersected) {\n        restoreLastMaterial(back_intersected);\n      }\n    }\n\n    // set the new intersected objects\n    intersected = object;\n\n    // save last material and set new one\n    if (intersected) {\n      const edges = object_edges[intersected.uuid];\n      if (edges) {\n        edges.material.color.setRGB(0, 255, 0);\n        edges.material.linewidth = 4;\n        edges.material.needsUpdate = true;\n      }\n    }\n    if (!isData && intersected) {\n      setSelectedMaterial(intersected);\n\n      const coincident_intersected = coincident_objects[intersected.uuid];\n      if (coincident_intersected) {\n        removeMaterial(coincident_intersected);\n      }\n\n      const back_intersected = back_objects[intersected.uuid];\n      if (back_intersected) {\n        removeMaterial(back_intersected);\n      }\n    }\n    if (isData && intersected) {\n      update();\n    }\n  }\n}\n\nfunction removeSelection() {\n  selectObject(null);\n  headsUp.style.display = 'none';\n  document.body.style.cursor = 'auto';\n  document.getElementById('color-bar-selection-line').style.display = 'none';\n  document.getElementById('color-bar-selection-text').style.display = 'none';\n}\n\nfunction parseMaterials(json) {\n  const materials = {};\n  const loader = new THREE.MaterialLoader();\n  for (let i = 0, l = json.length; i < l; i++) {\n    const data = json[i];\n    const material = loader.parse(data);\n    material.uuid = data.uuid;\n    material.name = data.name;\n    materials[data.name] = material;\n  }\n  return materials;\n}\n\nfunction onDocumentMouseDown(event) {\n  mouseDownX = event.clientX;\n  mouseDownY = event.clientY;\n}\nfunction onDocumentMouseClick(event) {\n  // Only act on the mouse click if it was an actual click, not a drag to orbit the camera\n  if (mouseDownX === event.clientX && mouseDownY === event.clientY) {\n    mouse.x = (event.clientX / renderer.domElement.width) * 2 - 1;\n    mouse.y = -(event.clientY / renderer.domElement.height) * 2 + 1;\n\n    if (settings.orthographic) {\n      raycaster.setFromCamera(mouse, orthographicCamera);\n    } else {\n      raycaster.setFromCamera(mouse, perspectiveCamera);\n    }\n\n    // raycaster intersects invisible objects so filter first\n    const pickable = scene_objects.filter(x => x.visible);\n    const intersects = raycaster.intersectObjects(pickable);\n    if (intersects.length) {\n      selectObject(intersects[0].object);\n\n      headsUp.style.left = `${10 + 0.5 * window.innerWidth + mouse.x * 0.5 * window.innerWidth}px`;\n      headsUp.style.top = `${-10 + 0.5 * window.innerHeight - mouse.y * 0.5 * window.innerHeight}px`;\n      headsUp.style.display = 'block';\n      document.getElementById('color-bar-selection-line').style.display = 'block';\n      document.getElementById('color-bar-selection-text').style.display = 'inline-block';\n\n      let txt = `Name: ${intersected.userData.name}<br>`;\n      switch (settings.renderBy) {\n        case 'Surface Type':\n          txt += `Surface Type: ${intersected.userData.surfaceType}<br>`;\n          if (intersected.userData.spaceName) {\n            txt += `Space Name: ${intersected.userData.spaceName}`;\n          }\n          break;\n        case 'Normal':\n          txt += `Surface Type: ${intersected.userData.surfaceType}<br>`;\n          if (intersected.userData.spaceName) {\n            txt += `Space Name: ${intersected.userData.spaceName}`;\n          }\n          break;\n        case 'Boundary':\n          if (intersected.userData.outsideBoundaryCondition) {\n            txt += `Outside Boundary Condition: ${intersected.userData.outsideBoundaryCondition}<br>`;\n          }\n          txt += `Sun Exposure: ${intersected.userData.sunExposure}<br>`;\n          txt += `Wind Exposure: ${intersected.userData.windExposure}`;\n          break;\n        case 'Construction':\n          if (intersected.userData.constructionName) {\n            txt += `Construction Name: ${intersected.userData.constructionName}`;\n          }\n          break;\n        case 'Thermal Zone':\n          if (intersected.userData.thermalZoneName) {\n            txt += `Thermal Zone: ${intersected.userData.thermalZoneName}`;\n          }\n          break;\n        case 'Space Type':\n          if (intersected.userData.spaceTypeName) {\n            txt += `Space Type: ${intersected.userData.spaceTypeName}`;\n          }\n          break;\n        case 'Building Story':\n          if (intersected.userData.buildingStoryName) {\n            txt += `Story Name: ${intersected.userData.buildingStoryName}`;\n          }\n          break;\n        case 'Data':\n          // in javascript (0 == '' == false)\n          if (intersected.userData.letiableValue !== '') {\n            txt += `letiable: <span id=\"balloon-letiable-name\">${intersected.userData.letiableName}</span><br>`;\n            txt += `Key: <span id=\"balloon-letiable-key-name\">${intersected.userData.letiableKeyName}</span><br>`;\n            txt += `Date: <span id=\"balloon-letiable-date\">${intersected.userData.letiableDate}</span><br>`;\n            txt += `Time: <span id=\"balloon-letiable-time\">${intersected.userData.letiableTime}</span><br>`;\n            txt += `Value: <span id=\"balloon-letiable-value\">${intersected.userData.letiableValue}</span> ${intersected.userData.letiableUnits}`;\n          }\n          updateColorBarSelection(intersected.userData.letiableValue);\n          break;\n      }\n\n      headsUp.innerHTML = txt;\n      document.body.style.cursor = 'pointer';\n    } else {\n      removeSelection();\n    }\n  }\n}\n\nfunction init(os_data_in) {\n  // set global letiable\n  os_data = os_data_in;\n\n  const css = document.head.appendChild(document.createElement('style'));\n  css.innerHTML = 'body { font:600 12pt monospace; margin:0; overflow:hidden; }';\n\n  // Heads Up\n  headsUp = document.body.appendChild(document.createElement('div'));\n  headsUp.setAttribute('id', 'heads-up');\n\n  // Color Bar\n  colorBarHeight = 40;\n  colorBarWidth = 256;\n  colorBar = document.createElement('canvas');\n  colorBar.setAttribute('id', 'color-bar');\n  colorBar.setAttribute('height', colorBarHeight);\n  colorBar.setAttribute('width', colorBarWidth);\n\n  document.documentElement.setAttribute('ondrop', 'drop(event)');\n  document.documentElement.setAttribute('ondragover', 'allowDrop(event)');\n\n  const top = getFloatFromLocalStorage('colorBarTop', 0);\n  const left = getFloatFromLocalStorage('colorBarLeft', 0);\n  colorBarContainer = document.body.appendChild(document.createElement('div'));\n  colorBarContainer.setAttribute('id', 'color-bar-container');\n  colorBarContainer.setAttribute('draggable', 'true');\n  colorBarContainer.setAttribute('ondragstart', 'drag(event)');\n  colorBarContainer.style.height = `${colorBarHeight + 112}px`;\n  colorBarContainer.style.width = `${colorBarWidth + 42}px`;\n  colorBarContainer.style.top = `${top}px`;\n  colorBarContainer.style.left = `${left}px`;\n  if (settings.rotateColorBar) colorBarContainer.classList.add('rotate');\n  colorBarContainer.appendChild(colorBar);\n\n  let bar = document.createElement('div');\n  bar.classList.add('color-bar-tick');\n  bar.style.bottom = `${colorBarHeight + 21}px`;\n  bar.style.left = `${20}px`;\n  colorBarContainer.appendChild(bar);\n  bar = bar.cloneNode();\n  bar.style.left = `${20 + colorBarWidth}px`;\n  colorBarContainer.appendChild(bar);\n  bar = bar.cloneNode();\n  bar.setAttribute('id', 'color-bar-selection-line');\n  bar.style.display = 'none';\n  bar.style.bottom = '20px';\n  bar.style.height = '56px';\n  colorBarContainer.appendChild(bar);\n\n  let text = document.createElement('span');\n  text.classList.add('color-bar-text');\n  text.setAttribute('id', 'color-bar-min');\n  text.style.bottom = `${colorBarHeight + 30}px`;\n  text.style.left = `${10}px`;\n  colorBarContainer.appendChild(text);\n  text = text.cloneNode();\n  text.setAttribute('id', 'color-bar-max');\n  text.style.left = `${10 + colorBarWidth}px`;\n  colorBarContainer.appendChild(text);\n  text = text.cloneNode();\n  text.setAttribute('id', 'color-bar-selection-text');\n  colorBarContainer.appendChild(text);\n\n  renderer = new THREE.WebGLRenderer({\n    alpha: 1,\n    antialias: true,\n    clearColor: 0xffffff,\n  });\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  renderer.shadowMapEnabled = true;\n  renderer.shadowMapSoft = true;\n  document.body.appendChild(renderer.domElement);\n\n  scene = new THREE.Scene();\n  window.scene = scene;\n\n  const aspect = window.innerWidth / window.innerHeight;\n  orthographicCamera = new THREE.OrthographicCamera(4 * aspect * os_data.metadata.boundingBox.lookAtR / -2,\n    4 * aspect * os_data.metadata.boundingBox.lookAtR / 2,\n    4 * os_data.metadata.boundingBox.lookAtR / 2,\n    4 * os_data.metadata.boundingBox.lookAtR / -2,\n    1,\n    5000);\n  scene.add(orthographicCamera); // for light to follow\n  orthographicCamera.up.set(0, 1, 0);\n  orthographicCamera.lookAt(cameraLookAt());\n\n  perspectiveCamera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 5000);\n  scene.add(perspectiveCamera); // for light to follow\n  perspectiveCamera.up.set(0, 1, 0);\n  perspectiveCamera.lookAt(cameraLookAt());\n\n  // Controls\n  orthographicControls = new THREE.OrbitControls(orthographicCamera, renderer.domElement);\n  orthographicControls.minDistance = 10;\n  orthographicControls.maxDistance = 1000;\n  orthographicControls.enabled = true;\n\n  perspectiveControls = new THREE.OrbitControls(perspectiveCamera, renderer.domElement);\n  perspectiveControls.minDistance = 10;\n  perspectiveControls.maxDistance = 1000;\n  perspectiveControls.enabled = true;\n\n  // initialize camera and controls\n  setAllCameraAngles(-30, 30, 0);\n\n  // Lights\n  light = new THREE.AmbientLight(0xbbbbbb);\n  scene.add(light);\n\n  // Axes, adapted from AxisHelper.js\n  const axisSize = cameraRadius();\n\n  const xAxisMaterial = new THREE.LineBasicMaterial({ color: 0xff0000 });\n  const xAxisGeometry = new THREE.Geometry();\n  xAxisGeometry.vertices.push(new THREE.Vector3(0, 0, 0), new THREE.Vector3(axisSize, 0, 0));\n  scene.add(new THREE.Line(xAxisGeometry, xAxisMaterial));\n\n  const yAxisMaterial = new THREE.LineBasicMaterial({ color: 0x00ff00 });\n  const yAxisGeometry = new THREE.Geometry();\n  yAxisGeometry.vertices.push(new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, 0, -axisSize));\n  scene.add(new THREE.Line(yAxisGeometry, yAxisMaterial));\n\n  const zAxisMaterial = new THREE.LineBasicMaterial({ color: 0x0000ff });\n  const zAxisGeometry = new THREE.Geometry();\n  zAxisGeometry.vertices.push(new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, axisSize, 0));\n  scene.add(new THREE.Line(zAxisGeometry, zAxisMaterial));\n\n  // scene\n  project = new THREE.Object3D();\n  scene.add(project);\n\n  const loader = new THREE.ObjectLoader();\n  const data = loader.parse(os_data);\n  project.add(data);\n\n  // scene_objects is an array of THREE.Mesh where each mesh is a real OpenStudio object\n  scene_objects = project.children[0].children;\n\n  // temp is a map of OpenStudio handle to scene object\n  const temp = {};\n  scene_objects.forEach((object) => {\n    temp[object.userData.handle] = object;\n  });\n\n  // coincident_objects store references between adjacent objects that are truly coincident, meaning that their vertices are completely the same\n  // when an object's coincident object is visible we do not want to show the back object\n  coincident_objects = {};\n  scene_objects.forEach((object) => {\n    if (object.userData.coincidentWithOutsideObject) {\n      coincident_objects[object.uuid] = temp[object.userData.outsideBoundaryConditionObjectHandle];\n    }\n  });\n\n  // back_objects are copies of scene_objects that exist only so we can color their back sides\n  scene_edges = [];\n  back_objects = {};\n  object_edges = {};\n  scene_objects.forEach((object) => {\n    const edges = new THREE.EdgesHelper(object, 0x000000);\n    scene.add(edges);\n    const edge = scene.children[scene.children.length - 1];\n    scene_edges.push(edge);\n    object_edges[object.uuid] = edge;\n\n    let back_object = object.clone();\n    back_object.visible = false;\n    back_object.name += ' Back';\n    scene.add(back_object);\n    back_object = scene.children[scene.children.length - 1];\n    back_object.geometry = object.geometry.clone();\n    back_objects[object.uuid] = back_object;\n  });\n\n  // show look at point\n  // let sg = new THREE.SphereGeometry( 1, 32, 32 );\n  // let sm = new THREE.MeshBasicMaterial( {color: 0xff0000} );\n  // let s = new THREE.Mesh( sg, sm );\n  // scene.add( s );\n  // s.position.set(cameraLookAt().x, cameraLookAt().y, cameraLookAt().z);\n\n  raycaster = new THREE.Raycaster();\n  mouse = new THREE.Vector2();\n\n  selected_material = new THREE.MeshPhongMaterial({\n    name: 'Selected',\n    color: 0xffff00,\n    ambient: 0xffff00,\n    specular: 0xffff00,\n    emissive: 0xffff00,\n    shininess: 50,\n    side: THREE.DoubleSide,\n  });\n  materials = parseMaterials(os_data.materials);\n\n  renderer.domElement.addEventListener('mousedown', onDocumentMouseDown, false);\n  renderer.domElement.addEventListener('click', onDocumentMouseClick, false);\n}\n\nfunction animate() {\n  requestAnimationFrame(animate);\n  orthographicControls.update();\n  perspectiveControls.update();\n  if (settings.orthographic) {\n    renderer.render(scene, orthographicCamera);\n  } else {\n    renderer.render(scene, perspectiveCamera);\n  }\n}\n\nconst initDatGui = function () {\n  const has_data = (os_data.metadata.letiables && os_data.metadata.letiables.length);\n\n  dat.GUI.prototype.removeFolder = function (name) {\n    this.__folders[name].close();\n    this.__folders[name].domElement.parentNode.parentNode.removeChild(this.__folders[name].domElement.parentNode);\n    this.__folders[name] = undefined;\n    this.onResize();\n  };\n\n  gui = new dat.GUI();\n  // DLM: support reduce list\n  // let render_modes = ['Surface Type', 'Normal', 'Boundary', 'Construction', 'Thermal Zone', 'Space Type', 'Building Story'];\n  const render_modes = ['Surface Type', 'Normal', 'Thermal Zone', 'Space Type', 'Building Story'];\n  if (has_data) {\n    render_modes.push('Data');\n  }\n  gui.add(settings, 'renderBy', render_modes).name('Render By').onChange((value) => {\n    removeSelection();\n    update(value);\n  });\n\n  const building_story_names = os_data.metadata.buildingStoryNames;\n  building_story_names.unshift('All Stories');\n  gui.add(settings, 'showStory', building_story_names).name('Show Story').onChange((value) => {\n    removeSelection();\n    update(value);\n  });\n\n  const f1 = gui.addFolder('Surface Filters');\n  f1.add(settings, 'showFloors').name('Show Floors').onChange((value) => {\n    removeSelection();\n    setLocalStorage('showFloors', value);\n    update(value);\n  });\n  f1.add(settings, 'showWalls').name('Show Walls').onChange((value) => {\n    removeSelection();\n    setLocalStorage('showWalls', value);\n    update(value);\n  });\n  f1.add(settings, 'showRoofCeilings').name('Show Roofs').onChange((value) => {\n    removeSelection();\n    setLocalStorage('showRoofCeilings', value);\n    update(value);\n  });\n  f1.add(settings, 'showWindows').name('Show Windows').onChange((value) => {\n    removeSelection();\n    setLocalStorage('showWindows', value);\n    update(value);\n  });\n  f1.add(settings, 'showDoors').name('Show Doors').onChange((value) => {\n    removeSelection();\n    setLocalStorage('showDoors', value);\n    update(value);\n  });\n  f1.add(settings, 'showShading').name('Show Shading').onChange((value) => {\n    removeSelection();\n    setLocalStorage('showShading', value);\n    update(value);\n  });\n  f1.add(settings, 'showPartitions').name('Show Partitions').onChange((value) => {\n    removeSelection();\n    setLocalStorage('showPartitions', value);\n    update(value);\n  });\n  f1.add(settings, 'showWireframe').name('Show Wireframe').onChange((value) => {\n    removeSelection();\n    setLocalStorage('showWireframe', value);\n    update(value);\n  });\n  f1.open();\n\n  const f2 = gui.addFolder('Camera');\n  f2.add(settings, 'orthographic').name('Orthographic').onChange((value) => {\n    setLocalStorage('orthographic', value);\n  });\n  f2.add(settings, 'xView').name('X View');\n  f2.add(settings, 'yView').name('Y View');\n  f2.add(settings, 'zView').name('Z View');\n  f2.add(settings, 'reset').name('Reset');\n  f2.open();\n\n  /* let f2 = gui.addFolder('Section Cut');\n  f2.add(settings, 'xSection', 0, 360).name('X Section').onChange(function (value) {\n    console.log('X cut: ' + value);\n  });\n  f2.add(settings, 'ySection', 0, 360).name('Y Section').onChange(function (value) {\n    console.log('Y cut: ' + value);\n  });\n  f2.add(settings, 'zSection', 0, 360).name('Z Section').onChange(function (value) {\n    console.log('Z cut: ' + value);\n  });\n  f2.open(); */\n\n  update();\n};\n\nconst storageKey = 'floorplan3DExport';\nModule.addOnPostRun(() => {\n  const floorplanStr = localStorage.getItem(storageKey);\n  if (floorplanStr) {\n    const threejsStr = Module.floorplanToThreeJS(floorplanStr, false);\n    const threejs = JSON.parse(threejsStr);\n    init(threejs);\n    animate();\n    initDatGui();\n  }\n\n  window.onstorage = (event) => {\n    if (event.key === storageKey) {\n      location.reload();\n    }\n  };\n});\n\n\n\n// WEBPACK FOOTER //\n// ./3DViewer/viewer/main.js"],"sourceRoot":""}